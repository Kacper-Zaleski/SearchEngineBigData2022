// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SearchEngineRepository;

#nullable disable

namespace SearchEngineRepository.Migrations
{
    [DbContext(typeof(SearchEngineDbContext))]
    partial class SearchEngineDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SearchEngineRepository.Entity.BookIndex", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Authors")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Href")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("InvertedIndexId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Invocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageIndex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RealeseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InvertedIndexId");

                    b.ToTable("Index");
                });

            modelBuilder.Entity("SearchEngineRepository.Entity.InvertedIndex", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("InvertedIndex");
                });

            modelBuilder.Entity("SearchEngineRepository.Entity.BookIndex", b =>
                {
                    b.HasOne("SearchEngineRepository.Entity.InvertedIndex", null)
                        .WithMany("Indexes")
                        .HasForeignKey("InvertedIndexId");
                });

            modelBuilder.Entity("SearchEngineRepository.Entity.InvertedIndex", b =>
                {
                    b.Navigation("Indexes");
                });
#pragma warning restore 612, 618
        }
    }
}
